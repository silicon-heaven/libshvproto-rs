name: Rust Build and Artifact Creation

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: write
  # For syyyr/rust-pycobertura-action
  pull-requests: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        toolchain: [stable, nightly]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        target: ${{ matrix.target }}
        toolchain: ${{ matrix.toolchain }}
        override: true

    - name: Build and Install Binary
      run: |
        mkdir -p ${{github.workspace}}/install
        # FIXME: Remove when this thing makes it into stable
        export RUSTFLAGS="-A mismatched_lifetime_syntaxes"
        cargo install --path '${{github.workspace}}' --root '${{github.workspace}}/install' --target ${{ matrix.target }} --features cp2cp
      shell: bash

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.toolchain }}-binary
        path: ${{github.workspace}}/install/bin

  create-nightly-release:
    name: Create nightly
    if: github.ref == 'refs/heads/master'
    needs: [build]
    runs-on: ubuntu-latest
    env:
      HASH_FOR_FILENAMES: ${{github.event.pull_request.head.sha || github.sha}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Consolidate artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: '*-latest-nightly-binary'
          merge-multiple: true

      - name: Rename artifacts
        run: |
          CP2CP_FILE_NAME="$(printf "cp2cp-nightly-g%s" "$(head -c 7 <<< '${{env.HASH_FOR_FILENAMES}}')")"
          mv cp2cp "${CP2CP_FILE_NAME}"
          mv cp2cp.exe "${CP2CP_FILE_NAME}.exe"

      - name: Create release
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        uses: silicon-heaven/rust-nightly-release-action@v1.0.0
        with:
          path_glob: cp2cp*

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - name: Generate coverage
        uses: syyyr/rust-pycobertura-action@v3.0.0
        with:
          project_name: libshvproto
          cargo_test_arguments: --features cp2cp

  check-version-bump:
    name: Check version bump
    runs-on: ubuntu-latest
    steps:
      - name: Check version bump
        uses: syyyr/rust-check-version-bump@v1.0.0
